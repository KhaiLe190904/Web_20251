// ========== 1. KH·ªûI T·∫†O V√Ä LOCALSTORAGE ==========

const STORAGE_KEY = "products";

// Kh·ªüi t·∫°o s·∫£n ph·∫©m m·∫´u
const initialProducts = [
  {
    name: "Elden Ring - PS5",
    price: 1490000,
    desc: "Game nh·∫≠p vai th·∫ø gi·ªõi m·ªü ƒë√¨nh ƒë√°m, k·∫øt h·ª£p gi·ªØa FromSoftware v√† George R.R. Martin. Kh√°m ph√° th·∫ø gi·ªõi r·ªông l·ªõn v·ªõi gameplay ƒë·∫ßy th·ª≠ th√°ch v√† c√¢u chuy·ªán h·∫•p d·∫´n.",
    image:
      "https://shared.fastly.steamstatic.com/store_item_assets/steam/apps/256839312/3bcf246a6f06cc165a6afb8b15db4626efe10fcf/movie_232x130.jpg?t=1739917125",
  },
  {
    name: "The Legend of Zelda: Tears of the Kingdom - Switch",
    price: 1590000,
    desc: "Ph·∫ßn ti·∫øp theo c·ªßa Breath of the Wild, mang ƒë·∫øn tr·∫£i nghi·ªám phi√™u l∆∞u m·ªõi v·ªõi c∆° ch·∫ø gameplay s√°ng t·∫°o v√† th·∫ø gi·ªõi Hyrule r·ªông l·ªõn h∆°n bao gi·ªù h·∫øt.",
    image:
      "https://haloshop.vn/wp-content/uploads/2025/02/the-legend-of-zelda-tears-of-the-kingdom-switch-700x700h.jpg",
  },
  {
    name: "Starfield - Xbox Series X",
    price: 1390000,
    desc: "Game nh·∫≠p vai kh√¥ng gian ƒë·∫ßu tay c·ªßa Bethesda. Kh√°m ph√° v≈© tr·ª• r·ªông l·ªõn v·ªõi h√†ng ngh√¨n h√†nh tinh, t·ª± do x√¢y d·ª±ng t√†u v≈© tr·ª• v√† vi·∫øt n√™n c√¢u chuy·ªán c·ªßa ri√™ng b·∫°n.",
    image:
      "https://shared.akamai.steamstatic.com/store_item_assets/steam/apps/1716740/capsule_616x353.jpg?t=1749757928",
  },
];

// T·∫°o ph·∫ßn t·ª≠ HTML t·ª´ d·ªØ li·ªáu s·∫£n ph·∫©m
function createProductElement(product, index) {
  const productElement = document.createElement("article");
  productElement.className = "product-item";
  productElement.setAttribute("data-price", product.price);
  productElement.setAttribute("data-name", product.name);
  productElement.setAttribute("data-index", index);

  productElement.innerHTML = `
    ${
      product.image
        ? `<img src="${product.image}" alt="${product.name}">`
        : '<img src="https://via.placeholder.com/300x200?text=No+Image" alt="No Image">'
    }
    <h3>${product.name}</h3>
    <p class="product-description">${product.desc || "S·∫£n ph·∫©m m·ªõi"}</p>
    <p class="product-price">
      <strong>Gi√°:</strong> ${Number(product.price).toLocaleString("vi-VN")}ƒë
    </p>
    <button class="delete-btn" data-index="${index}">üóëÔ∏è X√≥a</button>
  `;

  return productElement;
}

// Load s·∫£n ph·∫©m t·ª´ localStorage
function loadProductsFromLocalStorage() {
  const productList = document.querySelector(".product-list");
  productList.innerHTML = "";

  // Ki·ªÉm tra localStorage c√≥ d·ªØ li·ªáu kh√¥ng
  const storedData = localStorage.getItem(STORAGE_KEY);

  let products;
  if (storedData) {
    // Parse JSON t·ª´ localStorage
    products = JSON.parse(storedData);
  } else {
    // N·∫øu ch∆∞a c√≥, kh·ªüi t·∫°o v·ªõi s·∫£n ph·∫©m m·∫´u
    products = initialProducts;
    localStorage.setItem(STORAGE_KEY, JSON.stringify(products));
  }

  // Hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m
  products.forEach((product, index) => {
    const productElement = createProductElement(product, index);
    productList.appendChild(productElement);
  });

  // G·∫Øn s·ª± ki·ªán x√≥a cho t·∫•t c·∫£ n√∫t x√≥a
  attachDeleteEvents();
}

// L∆∞u s·∫£n ph·∫©m v√†o localStorage
function saveProductsToLocalStorage(newProduct) {
  // L·∫•y danh s√°ch hi·ªán t·∫°i t·ª´ localStorage
  const storedData = localStorage.getItem(STORAGE_KEY);
  const products = storedData ? JSON.parse(storedData) : [];

  // Th√™m s·∫£n ph·∫©m m·ªõi v√†o ƒë·∫ßu m·∫£ng
  products.unshift(newProduct);

  // L∆∞u l·∫°i v√†o localStorage
  localStorage.setItem(STORAGE_KEY, JSON.stringify(products));
}

// ========== 2. X√ìA S·∫¢N PH·∫®M ==========

function attachDeleteEvents() {
  const deleteButtons = document.querySelectorAll(".delete-btn");
  deleteButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const index = btn.getAttribute("data-index");
      deleteProduct(index);
    });
  });
}

function deleteProduct(index) {
  const storedData = localStorage.getItem(STORAGE_KEY);
  const products = storedData ? JSON.parse(storedData) : [];

  if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m "${products[index].name}"?`)) {
    products.splice(index, 1);
    localStorage.setItem(STORAGE_KEY, JSON.stringify(products));
    loadProductsFromLocalStorage();
  }
}

// ========== 3. T√åM KI·∫æM V√Ä L·ªåC N√ÇNG CAO ==========

function filterAndSortProducts() {
  const searchTerm = document
    .getElementById("searchInput")
    .value.toLowerCase()
    .trim();
  const priceFilter = document.getElementById("priceFilter").value;
  const sortOption = document.getElementById("sortOption").value;

  let productItems = Array.from(document.querySelectorAll(".product-item"));

  // L·ªçc theo t√™n
  productItems.forEach((product) => {
    const productName = product.getAttribute("data-name").toLowerCase();
    const price = Number(product.getAttribute("data-price"));
    let shouldShow = true;

    // Ki·ªÉm tra t√™n
    if (searchTerm && !productName.includes(searchTerm)) {
      shouldShow = false;
    }

    // Ki·ªÉm tra kho·∫£ng gi√°
    if (priceFilter !== "all") {
      const [minPrice, maxPrice] = priceFilter.split("-").map(Number);
      if (price < minPrice || price > maxPrice) {
        shouldShow = false;
      }
    }

    product.style.display = shouldShow ? "" : "none";
  });

  // S·∫Øp x·∫øp
  if (sortOption !== "none") {
    const productList = document.querySelector(".product-list");
    const visibleProducts = productItems.filter(
      (p) => p.style.display !== "none"
    );

    visibleProducts.sort((a, b) => {
      if (sortOption === "name-asc") {
        return a
          .getAttribute("data-name")
          .localeCompare(b.getAttribute("data-name"));
      } else if (sortOption === "name-desc") {
        return b
          .getAttribute("data-name")
          .localeCompare(a.getAttribute("data-name"));
      } else if (sortOption === "price-asc") {
        return (
          Number(a.getAttribute("data-price")) -
          Number(b.getAttribute("data-price"))
        );
      } else if (sortOption === "price-desc") {
        return (
          Number(b.getAttribute("data-price")) -
          Number(a.getAttribute("data-price"))
        );
      }
      return 0;
    });

    // Re-append theo th·ª© t·ª± m·ªõi
    visibleProducts.forEach((product) => {
      productList.appendChild(product);
    });
  }
}

const searchBtn = document.getElementById("searchBtn");
searchBtn.addEventListener("click", filterAndSortProducts);

const searchInput = document.getElementById("searchInput");
searchInput.addEventListener("keyup", (event) => {
  if (event.key === "Enter") {
    filterAndSortProducts();
  }
});

const priceFilter = document.getElementById("priceFilter");
priceFilter.addEventListener("change", filterAndSortProducts);

const sortOption = document.getElementById("sortOption");
sortOption.addEventListener("change", filterAndSortProducts);

// ========== 4. HI·ªÇN TH·ªä/·∫®N FORM V·ªöI TRANSITION ==========

function toggleAddProductForm() {
  const addProductForm = document.getElementById("addProductForm");
  addProductForm.classList.toggle("show");

  if (addProductForm.classList.contains("show")) {
    setTimeout(() => {
      addProductForm.scrollIntoView({ behavior: "smooth", block: "nearest" });
    }, 100);
  }
}

const addProductBtn = document.getElementById("addProductBtn");
addProductBtn.addEventListener("click", toggleAddProductForm);

const cancelBtn = document.getElementById("cancelBtn");
cancelBtn.addEventListener("click", () => {
  document.getElementById("addProductForm").classList.remove("show");
  document.getElementById("productForm").reset();
});

// ========== 5. VALIDATION V√Ä TH√äM S·∫¢N PH·∫®M ==========

function validateProductData(name, price) {
  if (name === "") {
    return "Vui l√≤ng nh·∫≠p t√™n s·∫£n ph·∫©m!";
  }

  if (price === "") {
    return "Vui l√≤ng nh·∫≠p gi√° s·∫£n ph·∫©m!";
  }

  const priceNumber = Number(price);

  if (isNaN(priceNumber)) {
    return "Gi√° s·∫£n ph·∫©m ph·∫£i l√† s·ªë h·ª£p l·ªá!";
  }

  if (priceNumber <= 0) {
    return "Gi√° s·∫£n ph·∫©m ph·∫£i l·ªõn h∆°n 0!";
  }

  return "";
}

function handleAddProduct(event) {
  event.preventDefault();

  const name = document.getElementById("productName").value.trim();
  const price = document.getElementById("productPrice").value.trim();
  const description = document
    .getElementById("productDescription")
    .value.trim();
  const imageUrl = document.getElementById("productImage").value.trim();

  const errorMessage = validateProductData(name, price);

  if (errorMessage !== "") {
    alert(errorMessage);
    return;
  }

  // T·∫°o ƒë·ªëi t∆∞·ª£ng s·∫£n ph·∫©m m·ªõi
  const newProduct = {
    name: name,
    price: Number(price),
    desc: description,
    image: imageUrl,
  };

  // L∆∞u v√†o localStorage
  saveProductsToLocalStorage(newProduct);

  // Load l·∫°i danh s√°ch ƒë·ªÉ c·∫≠p nh·∫≠t index
  loadProductsFromLocalStorage();

  // Reset form v√† ·∫©n
  document.getElementById("productForm").reset();
  document.getElementById("addProductForm").classList.remove("show");

  alert(`ƒê√£ th√™m s·∫£n ph·∫©m "${name}" th√†nh c√¥ng!`);
}

// G·∫Øn s·ª± ki·ªán submit cho form
const productForm = document.getElementById("productForm");
productForm.addEventListener("submit", handleAddProduct);

// ========== 6. LOAD S·∫¢N PH·∫®M KHI TRANG LOAD ==========

document.addEventListener("DOMContentLoaded", loadProductsFromLocalStorage);
